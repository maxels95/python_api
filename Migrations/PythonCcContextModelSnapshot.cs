// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using python_api.Data;

#nullable disable

namespace pythonapi.Migrations
{
    [DbContext(typeof(PythonCcContext))]
    partial class PythonCcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("python_api.Model.Reading", b =>
                {
                    b.Property<string>("ReadingID")
                        .HasColumnType("TEXT")
                        .HasColumnName("ReadingID");

                    b.Property<string>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SensorID")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("SensorID");

                    b.Property<double?>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("ReadingID");

                    b.HasIndex("SensorID");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("python_api.Model.Sensor", b =>
                {
                    b.Property<string>("SensorID")
                        .HasColumnType("TEXT")
                        .HasColumnName("SensorID");

                    b.Property<int>("ControlMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RelayManualState")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SensorPin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SensorRelay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SensorType")
                        .HasColumnType("INTEGER");

                    b.HasKey("SensorID");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("python_api.Model.User", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UserID");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPassword")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("python_api.Model.Reading", b =>
                {
                    b.HasOne("python_api.Model.Sensor", "Sensor")
                        .WithMany("Readings")
                        .HasForeignKey("SensorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("python_api.Model.Sensor", b =>
                {
                    b.Navigation("Readings");
                });
#pragma warning restore 612, 618
        }
    }
}
